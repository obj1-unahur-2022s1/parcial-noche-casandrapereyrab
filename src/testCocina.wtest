import comidas.*
import comensales.*
import cocina.*

describe "tests Cocina" {
		const hambCarne = new HamburguesaCarne(tipoDePan = new Casero() )
		const hambCarne2 = new HamburguesaCarne(tipoDePan = new DeMasaMadre() )
		const hambVeggie = new HamburguesaVegetariana(tipoDePan = new DeMasaMadre(), legumbre = "garbanzos")
		const hambVeggie2 = new HamburguesaVegetariana(tipoDePan = new Casero(), legumbre = "lentejas")
		const provoleta = new Provoleta(peso = 190)
		const parrillada = new Parrillada()
		const asado = new CorteDeCarne(calidad = 10, peso = 250)
		const entrania = new CorteDeCarne(calidad = 7, peso = 200)
		const chorizo = new CorteDeCarne(calidad = 8, peso = 50)
		const vegetariano = new Vegetariano(peso = 68500)
		
	method initialize() {
		parrillada.agregarCorte(asado)
		parrillada.agregarCorte(entrania)
		parrillada.agregarCorte(chorizo)
		vegetariano.comer(provoleta)
		vegetariano.comer(hambVeggie)
		vegetariano.comer(hambVeggie)
		vegetariano.agregarUnaComidaQueLeGusta(hambVeggie)
		vegetariano.agregarUnaComidaQueLeGusta(hambVeggie2)
		cocina.prepararComida(hambCarne)
		cocina.prepararComida(hambCarne2)
		cocina.prepararComida(hambVeggie)
		cocina.prepararComida(hambVeggie)
		cocina.prepararComida(provoleta)
		cocina.prepararComida(parrillada)
		
	}
	
	test "la cocina tiene buena oferta vegetariana" {
		assert.that(cocina.buenaOfertaVegetariana())
	}
	
	test "el plato fuerte carn√≠voro es la parrillada" {
		assert.equals(parrillada, cocina.platoFuerteCarnivoro())
	}
	
	test "comidas que le gustan al vegetariano son provoleta y hambVeggie" {
		assert.equals([hambVeggie, hambVeggie2], cocina.comidasQueLeGustanA(vegetariano))
	}
}